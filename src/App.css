* {
  box-sizing: border-box;
}

html,
body,
#root {
  height: 100%;
}

body {
  margin: unset;
}

.output,
.click-area {
  position: absolute;
  inset: 0;
  height: 100%;
  background: black;
  overflow: hidden;
  aspect-ratio: 1;
}

.output {
  pointer-events: none;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: 0;
}

.toolbar {
  z-index: 1;
  position: fixed;
  top: 0;
  width: 100%;
  background: white;

  .inner {
    width: 100%;
    padding: 1rem;
    text-align: center;
    display: flex;
    gap: 1rem;
    flex-direction: column;
  }

  :where(.buttons) {
    display: flex;
    gap: 1rem;
    place-content: center;
  }
}

.mouse-position,
.draggable-button {
  height: 3px;
  width: 3px;
  position: absolute;
  z-index: 1;
  border: unset;
  padding: 1rem;
  translate: -50% -50%;
  display: grid;
  place-content: center;
  border-radius: 50%;
  cursor: grab;
}

.mouse-position,
.draggable-button:active {
  background: grey;
  opacity: 0.5;
  cursor: none;
}

.mouse-position {
  color: white;
  pointer-events: none;
}

.sidebar {
  position: fixed;
  right: 0;
  top: 0;

  z-index: 1;
  width: 20vw;
  background: white;
  height: 100%;
}

.start-point,
.end-point {
  aspect-ratio: 1;
  height: 10px;
  border-radius: 50%;
  translate: -50% -50%;
  z-index: 1;
}

.start-point {
  anchor-name: --start-point;
}

.end-point {
  anchor-name: --end-point;
}

[class$="-point"] {
  z-index: 1;
  position: absolute;
}

.rectangle-middle-point {
  top: min(anchor(--start-point center), anchor(--end-point center));
  left: min(anchor(--start-point center), anchor(--end-point center));
  right: min(anchor(--start-point center), anchor(--end-point center));
  bottom: min(anchor(--start-point center), anchor(--end-point center));

  background: oklab(from hotpink l a calc(b * 3) / 1.75);

  position: absolute;

  /* Technique found here: https://css-irl.info/css-halftone-patterns/	 */
  --dotSize: 0.15rem;
  --bgSize: 0.5rem;
  --bgPosition: calc(var(--bgSize) / 2);

  background: radial-gradient(red, hotpink);

  mask-image: radial-gradient(
      circle at center,
      black var(--dotSize),
      transparent 0
    ),
    radial-gradient(circle at center, black var(--dotSize), transparent 0);
  mask-size: var(--bgSize) var(--bgSize);
  mask-position: 0 0, var(--bgPosition) var(--bgPosition);
}

.circle-middle-point {
  border: 1px solid;
  background: oklab(from hotpink l a calc(b / 3) / 0.75);
  transform-origin: 0 0;
}

.circle-circle {
  position: absolute;
  z-index: 1;
  border-radius: 50%;
  aspect-ratio: 1;
  background: orange;
  opacity: 0.5;
  translate: -50% -50%;
}

.code-viewer {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  z-index: 1;
  background: white;

  .inner {
    padding: 1rem;
  }

  .close-button {
    top: 0;
    right: 0;
    position: absolute;
  }

  .copy-button {
    bottom: 0;
    right: 0;
  }
}

.toggle-code-button {
  position: absolute;
  bottom: 0;
  right: 0;
}

.code-viewer,
.toolbar {
  transition: height 0.2s ease-in-out;
  transition-behavior: allow-discrete;
  overflow: clip;
  height: 0;

  @starting-style {
    height: 0;
  }
}

.sidebar {
  transition: width 0.2s ease-in-out;
  transition-behavior: allow-discrete;
  overflow: clip;
  width: 0;

  @starting-style {
    width: 0;
  }
}

.toolbar {
  background: rgb(from white r g b / 0.75);
}

.toolbar--open,
.code-viewer--open {
  display: block;
  height: max-content;
  height: calc-size(max-content, size);
  border: 1px solid;
}

.code-viewer--open {
  max-height: 300px;
  overflow: auto;
}

.sidebar--open {
  display: block;
  width: max-content;
  width: calc-size(max-content, size);
  border: 1px solid;
}

.toolbar-toggle-button {
  position: absolute;
  top: 0;
  right: 0;
}
